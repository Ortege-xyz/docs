---
title: "Movement Labs"
format:
  html:
    toc: true
    html-math-method: katex
---
**db_m1_devnet**

# Bronze layer
The Bronze layer encapsulates the most fundamental form of blockchain data, presenting it in an untransformed, raw state. Here we explore two primary tables within this layer: `tbl_dev_br_blocks` and `tbl_dev_br_transactions`.

## Blocks
**tbl_dev_br_blocks**
This table archives the immutable records of blocks within the blockchain, serving as the source of truth for all subsequent operations and transformations.

| Field Name     | Type    | Description                                           |
|----------------|---------|-------------------------------------------------------|
| `number`       | Integer | The unique sequential identifier of the block.        |
| `hash`         | String  | The cryptographic hash that uniquely identifies the block. |
| `timestamp`    | Integer | The Unix epoch time at which the block was mined.     |
| `first_version`| Integer | The initial protocol version of the block.            |
| `last_version` | Integer | The final protocol version after any amendments.      |

## Transactions
**tbl_dev_br_transactions**
This table records all transactions within each block, capturing the essence of blockchain activity and state transitions.

| Field Name                 | Type    | Description                                                                         |
|----------------------------|---------|-------------------------------------------------------------------------------------|
| `hash`                     | String  | The unique hash identifying the transaction.                                        |
| `block_number`             | Integer | The block number in which the transaction is included.                              |
| `state_change_hash`        | String  | Hash representing the state change due to the transaction. |
| `event_root_hash` | String | Root hash of the event trie, encapsulating transaction-related events. |
| `version` | Integer | Version of the transaction protocol. |
| `gas_used` | Integer | The amount of computational gas used to execute the transaction. |
| `success` | Boolean | Indicator of whether the transaction was successful. |
| `vm_status` | String | Status returned by the virtual machine after transaction execution. |
| `accumulator_root_hash` | String | The root hash of the accumulator after applying the transaction. |
| `changes` | Array | List of state changes caused by the transaction. |
| `previous_block_votes_bitvec` | Array | Bit vector representing the votes for the previous block. |
| `failed_proposer_indices` | Array | Indices of proposers who failed to propose a block when expected. |
| `timestamp` | Integer | Timestamp for when the transaction was included in a block. |
| `max_gas_amount` | Integer | Maximum amount of gas that can be consumed by the transaction. |
| `gas_unit_price` | Integer | The unit price of gas that the sender is willing to pay. |
| `expiration_timestamp_secs`| Integer | Timestamp in seconds after which the transaction will be discarded if not included. |
| `payload` | Object | Object containing the details of the transaction's payload. |
| `events` | Array | Array of events generated by the transaction. |
| `signature` | Object | Object containing the cryptographic signature verifying the transaction. |
